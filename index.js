import{a as f,S as b,i as n}from"./assets/vendor-C4-ZuMk8.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const u of e.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&l(u)}).observe(document,{childList:!0,subtree:!0});function i(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function l(t){if(t.ep)return;t.ep=!0;const e=i(t);fetch(t.href,e)}})();const w="https://pixabay.com/api/",L="46194524-ed8204bc29acf0aaf22e3d7ea";async function m(r,s=1){const i=new URLSearchParams({q:r.q,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:s});try{return(await f.get(`${w}?key=${L}&${i}`)).data}catch{throw new Error("Something went wrong with the request")}}function h(r){const s=document.querySelector(".gallery"),i=r.reduce((t,e)=>t+`
      <li class="gallery-el">
        <a href="${e.largeImageURL}" class="gallery-item">
          <div class="gallery-card">
            <img class="gallery-img" src="${e.webformatURL}" alt="${e.tags}" />
            <ul class="list-statistics">
              <li><h2 class="title-statistics">Likes</h2><p class="data-statistics">${e.likes}</p></li>
              <li><h2 class="title-statistics">Views</h2><p class="data-statistics">${e.views}</p></li>
              <li><h2 class="title-statistics">Comments</h2><p class="data-statistics">${e.comments}</p></li>
              <li><h2 class="title-statistics">Downloads</h2><p class="data-statistics">${e.downloads}</p></li>
            </ul>
          </div>
        </a>
      </li>`,"");s.insertAdjacentHTML("beforeend",i),new b(".gallery a").refresh()}const y=document.querySelector("form"),a=document.querySelector(".loader"),p=document.querySelector(".gallery"),d=document.querySelector(".load-more");let o=1,c="",g=0;y.addEventListener("submit",async r=>{if(r.preventDefault(),c=r.target.elements.q.value.trim(),!c){n.error({message:"Please enter a search query.",title:"",backgroundColor:"rgba(45, 173, 65, 1)",icon:"my-custom-icon",iconColor:"rgba(255, 255, 255, 1)",messageSize:"16px",titleLineHeight:"1.5",position:"topRight",messageColor:"rgba(255, 255, 255, 1)",maxWidth:"432px"});return}o=1,p.innerHTML="",a.style.display="block",d.style.display="none";try{const s=await m({q:c},o);if(a.style.display="none",s.hits.length===0){n.error({backgroundColor:"rgba(239, 64, 64, 1)",message:"Sorry, there are no images matching <br>your search query. Please try again!",icon:"my-custom-icon",iconColor:"rgba(255, 255, 255, 1)",messageSize:"16px",titleLineHeight:"1.5",position:"topRight",messageColor:"rgba(255, 255, 255, 1)",maxWidth:"432px"});return}h(s.hits),y.reset(),g=s.totalHits,o*15<g&&(d.style.display="block")}catch(s){a.style.display="none",n.error({title:"Error",message:s.message})}});d.addEventListener("click",async()=>{o+=1,a.style.display="block";try{const r=await m({q:c},o);a.style.display="none",h(r.hits),o*15>=g&&(d.style.display="none",n.info({message:"We're sorry, but you've reached the end of search results."})),window.scrollBy({top:p.lastElementChild.getBoundingClientRect().height*2,behavior:"smooth"})}catch(r){a.style.display="none",n.error({title:"Error",message:r.message})}});
//# sourceMappingURL=index.js.map
